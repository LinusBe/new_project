"""
Django settings for tradingsolution project.
 Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=*ku3m@g&@&fe^@t)gofxe3m(d%y$7bo0yq#j)^_t#tvi(fsp4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    "DEFRAWS175854",
    "defradt031172"
]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',

     'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize', # NEU: Für bessere Formatierung (z.B.
 Dateigrößen)
    'members.apps.MembersConfig',
    'datafiles.apps.DatafilesConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tradingsolution.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [

                 'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tradingsolution.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',

      }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# Geändert auf Deutsch und lokale Zeitzone
LANGUAGE_CODE = 'de-de'
TIME_ZONE = 'Europe/Berlin'
USE_I1N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default
 primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Eingangs-, Verarbeitungs- & Fehler-Ordner (lokal oder Netzlaufwerk)
INBOX_DIR = r"C:\Users\Benutzer\OneDrive - Deutsche Bank AG\Documents\test_excel"

PROCESSED_DIR = r"C:\Users\Benutzer\OneDrive - Deutsche Bank AG\Documents\test_excel\processed"
ERROR_DIR = r"C:\Users\Benutzer\OneDrive - Deutsche Bank AG\Documents\test_excel\error"

# Optional: Fallback-Owner, wenn keine Regel greift
DEFAULT_OWNER_USERNAME = os.environ.get("TS_DEFAULT_OWNER_USERNAME", "admin")

# Optional: Duplikat-Strategie
# "skip" = überspringen, "version" = Dateiname versionieren, "replace" = überschreiben
DUPLICATE_STRATEGY = os.environ.get("TS_DUPLICATE_STRATEGY", "skip")

# Optional: max Wartezeit, bis Datei "stabil" (fertig geschrieben) ist
FILE_STABILITY_SECONDS = int(os.environ.get("TS_FILE_STABILITY_SECONDS", "3"))


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# NEU: Authentication settings
LOGIN_REDIRECT_URL = 'dashboard' # Wohin nach dem Login
# LOGOUT_REDIRECT_URL = reverse_lazy('login')
LOGOUT_REDIRECT_URL = '/account/login/'
LOGIN_URL = 'login'
         # URL der Login-Seite

# Unter MEDIA_ROOT/cache werden die Sidecar-Dateien abgelegt
DATA_CACHE_DIR = Path(MEDIA_ROOT) / "cache"

# Parquet-Schreibparameter (ZSTD + Dictionary-Encoding)
PARQUET_COMPRESSION = "zstd"
PARQUET_COMPRESSION_LEVEL = int(os.environ.get("TS_PARQUET_LEVEL", "7"))
PARQUET_USE_DICTIONARY = True
# Optional: Timestamp-Konsistenz (Arrow <-> Pandas)
PARQUET_COERCE_TIMESTAMPS = "ms"
PARQUET_TRUNCATE_TIMESTAMPS = True
